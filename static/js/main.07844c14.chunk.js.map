{"version":3,"sources":["store/index.js","components/Tabs/index.js","components/monthesAccord.js","components/MonthDay/index.js","components/Month/index.js","components/Week/index.js","components/Input/index.js","components/Day/index.js","App.js","index.js"],"names":["initialState","todos","currentYear","currentMonth","Date","getMonth","getTodos","state","getYear","setYear","payload","type","setMonth","store","createStore","action","map","todo","date","hour","isImportant","filter","body","Tabs","className","activeClassName","to","1","2","3","4","5","6","7","8","9","10","11","12","MonthDay","history","useHistory","useSelector","year","month","isThereEvent","find","join","tdClass","ClassNames","table__td","getDate","getFullYear","onClick","push","getLocalDay","day","getDay","Month","dispatch","useDispatch","monthLength","monthStartDay","startArr","Array","from","el","monthEndDay","endArr","middleArr","keys","datesArr","Button","variant","monthesAccord","key","slice","preparedHours","dates","weekDays","Week","i","row","cell","Input","useState","input","setInput","location","useLocation","pathname","inputClass","day__input","onSubmit","event","preventDefault","trim","value","onChange","target","onDoubleClick","deleteTodo","hours","Day","split","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07844c14.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nconst initialState = {\n  todos: [],\n  currentYear: 2020,\n  currentMonth: new Date().getMonth() + 1,\n};\n\nconst ADD_TODO = 'ADD_TODO';\nconst TOGGLE_IMPORTANCE = 'TOGGLE_IMPORTANCE';\nconst ADD_MARK = 'ADD_MARK';\nconst DELETE_TODO = 'DELETE_TODO';\nconst SET_YEAR = 'SET_YEAR';\nconst SET_MONTH = 'SET_MONTH';\n\nexport const getTodos = state => state.todos;\nexport const getYear = state => state.currentYear;\nexport const getMonth = state => state.currentMonth;\n\nexport const addTodo = payload => ({\n  type: ADD_TODO,\n  payload,\n});\n\nexport const toggleImportance = (date, hour, isImportant) => ({\n  type: ADD_TODO,\n  date,\n  hour,\n  isImportant,\n});\n\nexport const deleteTodo = (date, body, hour) => ({\n  type: DELETE_TODO,\n  date,\n  body,\n  hour,\n});\n\nexport const setYear = payload => ({\n  type: SET_YEAR,\n  payload,\n});\n\nexport const setMonth = payload => ({\n  type: SET_MONTH,\n  payload\n});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        todos: [\n          ...state.todos,\n          action.payload,\n        ],\n      };\n\n    case TOGGLE_IMPORTANCE:      \n      return {\n        ...state,\n        todos: state.todos.map(todo => todo.date === action.date\n          && todo.hour === action.hour\n          ? {\n            ...todo,\n            isImportant: action.isImportant,\n          }\n          : todo),\n      };\n\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.date !== action.date\n          || todo.body !== action.body || todo.hour !== action.hour),\n      };\n\n    case SET_YEAR:\n      return {\n        ...state,\n        currentYear: action.payload,\n      };\n\n    case SET_MONTH:\n      return {\n        ...state,\n        currentMonth: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, initialState);\n\nexport default store;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './tabs.scss';\n\nconst Tabs = () => {\n  return (\n    <section className=\"tabs\">\n      <NavLink\n          activeClassName=\"tabs__tab_active\"\n          className=\"tabs__tab\"\n          to=\"month\"\n      >\n        Month\n      </NavLink>\n      <NavLink\n          activeClassName=\"tabs__tab_active\"\n          className=\"tabs__tab\"\n          to=\"week\">\n        Week\n      </NavLink>\n      <NavLink\n          activeClassName=\"tabs__tab_active\"\n          className=\"tabs__tab\"\n          to=\"19-1-2020\">\n        Day\n      </NavLink>\n    </section>\n  );\n};\n\nexport default Tabs;\n","export default {\n  1: 'January',\n  2: 'February',\n  3: 'March',\n  4: 'April',\n  5: 'May',\n  6: 'June',\n  7: 'July',\n  8: 'August',\n  9: 'September',\n  10: 'October',\n  11: 'November',\n  12: 'December',\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ClassNames from 'classnames';\n\nimport { getTodos, getYear, getMonth } from '../../store';\n\nconst MonthDay = ({ date }) => {\n  const history = useHistory();\n  const todos = useSelector(getTodos);\n  const year = useSelector(getYear);\n  const month = useSelector(getMonth);\n  const isThereEvent = todos.find(todo => todo.date === [date, month, year].join('-'));\n\n  const tdClass = ClassNames(\n    { table__td: true },\n    { 'table__td--unactive': !date },\n    { 'table__td--today': date === new Date().getDate() \n        && month ===  new Date().getMonth() + 1\n        && year ===  new Date().getFullYear() },\n    { 'table__td--event': isThereEvent }\n  );\n\n  return (\n    <td \n      className={tdClass}\n      onClick={() => date && history.push(`${date}-${month}-${year}`)}\n    >\n      {date}\n    </td>\n  );\n};\n\nexport default MonthDay;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\n\nimport './title.scss';\nimport './table.scss';\nimport monthesAccord from '../monthesAccord';\nimport MonthDay from '../MonthDay';\nimport { getYear, getMonth, setYear, setMonth } from '../../store';\n\nconst getLocalDay = date => {\n  let day = date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n};\n\nconst Month = () => {\n  const year = useSelector(getYear);\n  const month = useSelector(getMonth);\n  const dispatch = useDispatch();\n\n  const monthLength = new Date(year, month, 0).getDate();\n  const monthStartDay = getLocalDay(new Date(year, month - 1));\n  const startArr = Array.from(Array(monthStartDay - 1)).map(el => '');\n  const monthEndDay = getLocalDay(new Date(year, month - 1, monthLength));\n  const endArr = Array.from(Array(7 - monthEndDay)).map(el => '');\n  const daysArr = ['MO', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU'];\n  const middleArr = Array.from(Array(monthLength).keys()).map(date => date + 1);\n  const datesArr = [...startArr, ...middleArr, ...endArr];\n\n  const decrease = () => {\n    if (month === 1) {\n      dispatch(setYear(year - 1));\n      dispatch(setMonth(12));\n    } else {\n      dispatch(setMonth(month - 1));\n    }\n  };\n\n  const increase = () => {\n    if (month === 12) {\n      dispatch(setYear(year + 1));\n      dispatch(setMonth(1));\n    } else {\n      dispatch(setMonth(month + 1));\n    }\n  };\n\n  return (\n    <div className=\"month-container\">\n      <section className=\"nav\">\n        <Button\n          variant=\"outlined\"\n          type=\"button\"\n          onClick={decrease}\n        >\n          ←\n        </Button>\n\n        <h2 className=\"nav__title\">\n          {monthesAccord[month]} {year}\n        </h2>\n\n        <Button\n          variant=\"outlined\"\n          type=\"button\"\n          onClick={increase}\n        >\n          →\n        </Button>\n      </section>\n\n      <table className=\"table\">\n        <thead>\n          <tr>\n            {daysArr.map(day => (\n              <th key={day} className=\"table__th\">{day}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {datesArr.slice(0, 7).map(date => (\n              <MonthDay\n                date={date}\n              />\n            ))}\n          </tr>\n          <tr>\n            {datesArr.slice(7, 14).map(date => (\n              <MonthDay\n                date={date}\n              />\n            ))}\n          </tr>\n          <tr>\n            {datesArr.slice(14, 21).map(date => (\n              <MonthDay\n                date={date}\n              />\n            ))}\n          </tr>\n          <tr>\n            {datesArr.slice(21, 28).map(date => (\n              <MonthDay\n                date={date}\n              />\n            ))}\n          </tr>\n          <tr>\n            {datesArr.slice(28, 35).map(date => (\n              <MonthDay\n                date={date}\n              />\n            ))}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Month;\n","import React from 'react';\nimport './week.scss';\n\nconst hours = [...Array(24).keys()];\nconst preparedHours = hours.map(hour => [`${hour}:00`, ...Array(7)]);\nconst dates = [13, 14, 15, 16, 17, 18, 19]//this must be in props?\nconst weekDays = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n\nconst Week = () => (\n  <div className=\"week-wrapper\">\n    <h1>January 2020</h1>\n    <table className=\"week-table\">\n      <thead>\n      <tr>\n        <th></th>\n        {dates.map((date, i) => (\n          <th key={date}>{weekDays[i]} {date}</th>\n        ))}\n      </tr>\n      </thead>\n      <tbody>\n      {preparedHours.map(row => (\n          <tr\n              className=\"week-table__row\"\n          >\n            {row.map(cell => (\n                <td\n                    className=\"week-table__cell\"\n                >{cell}\n                </td>\n            ))}\n          </tr>\n      ))}\n      </tbody>\n    </table>\n  </div>\n);\n\nexport default Week;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport ClassNames from 'classnames';\n\nimport { getTodos, toggleImportance, addTodo, deleteTodo } from '../../store';\n\nconst Input = ({ hour }) => {\n  const [input, setInput] = useState('');\n  const location = useLocation();\n  const todos = useSelector(getTodos);\n  const dispatch = useDispatch();\n\n  const isThereEvent = todos.find(todo => todo \n    && todo.date === location.pathname.slice(1)\n    && todo.hour === hour);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (input) {\n      dispatch(addTodo({\n        date: location.pathname.slice(1),\n        hour,\n        body: input.trim(),\n        isImportant: false,\n      }));\n    }\n  };\n\n  const editEvent = (event) => {\n    if (event.target.value) {\n      dispatch(deleteTodo(location.pathname.slice(1), event.target.value, hour));\n    }\n    setInput('');\n  };  \n\n  const inputClass = ClassNames(\n    { day__input: true },\n    { 'day__input--event': isThereEvent }\n  );\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        className={inputClass}\n        type=\"text\"\n        value={(isThereEvent && isThereEvent.body) || input}\n        onChange={event => setInput(event.target.value)}\n        onDoubleClick={editEvent}\n      />\n      {/* {isThereEvent && (\n        <label>\n          {isThereEvent.isImportant\n            ? 'Important'\n            : 'Is it important?'}\n          <input \n            className=\"checkbox\"\n            type=\"checkbox\" \n            checked={isThereEvent.isImportant}\n            onChange={event => dispatch(toggleImportance(\n              isThereEvent.date,\n              hour,\n              event.target.checked\n            ))}\n          />\n        </label>\n      )} */}\n    </form>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport './day.scss';\nimport monthesAccord from '../monthesAccord';\nimport Input  from '../Input';\n\nconst hours = [...Array(24).keys()];\n\nconst Day = () => {\n  const location = useLocation();\n  const date = location.pathname.slice(1).split('-');\n\n  return (\n    <div className=\"day\">\n      <h2 className=\"day__date\">\n        {date[0]} {monthesAccord[date[1]]} {date[2]}\n      </h2>\n      <div className=\"day__content\">\n        {hours.map(hour => (\n          <div\n              className=\"day__hour\"\n              key={hour}\n          >\n            <span className=\"day__hour-text\">{`${hour}:00`}</span>\n            <Input hour={hour} />\n              {/* <div className=\"labels\">\n                <label className=\"label--important\">Important\n                  <input\n                    type=\"checkbox\"\n                    // checked={isImportant}\n                  />\n                </label>\n\n                <select\n                    className=\"label--todo-type\"\n                  // onChange={}\n                >\n                  <option value=\"\">work</option>\n                  <option value=\"\">personal</option>\n                </select>\n            </div> */}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Day;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Tabs from './components/Tabs';\nimport Month from './components/Month';\nimport Week from './components/Week';\nimport Day from './components/Day';\n\nconst App = () => {\n\n  return (\n    <main>\n      <Tabs />\n      <Switch>\n        <Route path=\"/\" exact component={Month} />} />\n        <Route path=\"/month\" component={Month} />} />\n        <Route path=\"/week\" component={Week} />\n        <Route path=\"/:date?\" component={Day} />} />\n      </Switch>\n    </main>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}