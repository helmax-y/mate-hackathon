{"version":3,"sources":["store/index.js","components/Tabs/index.js","components/monthesAccord.js","components/MonthDay/index.js","components/Month/index.js","components/Week/index.js","components/Input/index.js","components/Day/index.js","App.js","index.js"],"names":["initialState","todos","currentYear","currentMonth","Date","getMonth","getTodos","state","getYear","setYear","payload","type","setMonth","store","createStore","action","map","todo","date","hour","isImportant","filter","body","Tabs","className","activeClassName","to","pathname","search","1","2","3","4","5","6","7","8","9","10","11","12","MonthDay","history","useHistory","useSelector","year","month","isThereEvent","find","join","tdClass","ClassNames","table__td","getDate","getFullYear","onClick","push","getLocalDay","day","getDay","Month","dispatch","useDispatch","useLocation","monthLength","monthStartDay","startArr","Array","from","el","monthEndDay","endArr","middleArr","keys","datesArr","console","log","Button","variant","monthesAccord","key","slice","preparedHours","dates","weekDays","Week","i","row","cell","Input","useState","input","setInput","location","inputClass","day__input","onSubmit","event","preventDefault","trim","value","onChange","target","onDoubleClick","deleteTodo","checked","toggleImportance","hours","Day","split","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.feaf62d5.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nconst initialState = {\n  todos: [],\n  currentYear: 2020,\n  currentMonth: new Date().getMonth() + 1,\n};\n\nconst ADD_TODO = 'ADD_TODO';\nconst TOGGLE_IMPORTANCE = 'TOGGLE_IMPORTANCE';\nconst DELETE_TODO = 'DELETE_TODO';\nconst SET_YEAR = 'SET_YEAR';\nconst SET_MONTH = 'SET_MONTH';\n\nexport const getTodos = state => state.todos;\nexport const getYear = state => state.currentYear;\nexport const getMonth = state => state.currentMonth;\n\nexport const addTodo = payload => ({\n  type: ADD_TODO,\n  payload,\n});\n\nexport const toggleImportance = (date, hour) => ({\n  type: TOGGLE_IMPORTANCE,\n  date,\n  hour\n});\n\nexport const deleteTodo = (date, body, hour) => ({\n  type: DELETE_TODO,\n  date,\n  body,\n  hour,\n});\n\nexport const setYear = payload => ({\n  type: SET_YEAR,\n  payload,\n});\n\nexport const setMonth = payload => ({\n  type: SET_MONTH,\n  payload\n});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        todos: [\n          ...state.todos,\n          action.payload,\n        ],\n      };\n\n    case TOGGLE_IMPORTANCE:            \n      return {\n        ...state,\n        todos: state.todos.map(todo => todo.date === action.date\n          && todo.hour === action.hour\n          ? {\n            ...todo,\n            isImportant: !todo.isImportant,\n          }\n          : todo),\n      };\n\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.date !== action.date\n          || todo.body !== action.body || todo.hour !== action.hour),\n      };\n\n    case SET_YEAR:\n      return {\n        ...state,\n        currentYear: action.payload,\n      };\n\n    case SET_MONTH:\n      return {\n        ...state,\n        currentMonth: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, initialState);\n\nexport default store;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './tabs.scss';\n\nconst Tabs = () => {\n  return (\n    <section className=\"tabs\">\n      <NavLink\n        activeClassName=\"tabs__tab_active\"\n        className=\"tabs__tab\"\n        to={{\n          pathname: 'month',\n          search: 'current'\n        }}\n      >\n        Current Month\n      </NavLink>\n      <NavLink\n          activeClassName=\"tabs__tab_active\"\n          className=\"tabs__tab\"\n          to=\"month\"\n      >\n        Month\n      </NavLink>\n      <NavLink\n          activeClassName=\"tabs__tab_active\"\n          className=\"tabs__tab\"\n          to=\"week\">\n        Week\n      </NavLink>\n      <NavLink\n          activeClassName=\"tabs__tab_active\"\n          className=\"tabs__tab\"\n          to=\"19-1-2020\">\n        Today\n      </NavLink>\n    </section>\n  );\n};\n\nexport default Tabs;\n","export default {\n  1: 'January',\n  2: 'February',\n  3: 'March',\n  4: 'April',\n  5: 'May',\n  6: 'June',\n  7: 'July',\n  8: 'August',\n  9: 'September',\n  10: 'October',\n  11: 'November',\n  12: 'December',\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ClassNames from 'classnames';\n\nimport { getTodos, getYear, getMonth } from '../../store';\n\nconst MonthDay = ({ date }) => {\n  const history = useHistory();\n  const todos = useSelector(getTodos);\n  const year = useSelector(getYear);\n  const month = useSelector(getMonth);\n  const isThereEvent = todos.find(todo => todo && todo.date === [date, month, year].join('-'));\n\n  const tdClass = ClassNames(\n    { table__td: true },\n    { 'table__td--unactive': !date },\n    { 'table__td--today': date === new Date().getDate() \n        && month ===  new Date().getMonth() + 1\n        && year ===  new Date().getFullYear() },\n    { 'table__td--event': isThereEvent }\n  );\n\n  return (\n    <td \n      className={tdClass}\n      onClick={() => date && history.push(`${date}-${month}-${year}`)}\n    >\n      {date}\n    </td>\n  );\n};\n\nexport default MonthDay;","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\n\nimport './title.scss';\nimport './table.scss';\nimport monthesAccord from '../monthesAccord';\nimport MonthDay from '../MonthDay';\nimport { getYear, getMonth, setYear, setMonth } from '../../store';\n\nconst getLocalDay = date => {\n  let day = date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n};\n\nconst Month = () => {\n  const history = useHistory();\n  const year = useSelector(getYear);\n  const month = useSelector(getMonth);\n  const dispatch = useDispatch();\n\n  const location = useLocation();\n\n  if (location.search === '?current') {\n    dispatch(setYear(2020));\n    dispatch(setMonth(1));\n    history.push('/month');\n  }\n\n  const monthLength = new Date(year, month, 0).getDate();\n  const monthStartDay = getLocalDay(new Date(year, month - 1));\n  const startArr = Array.from(Array(monthStartDay - 1)).map(el => '');\n  const monthEndDay = getLocalDay(new Date(year, month - 1, monthLength));\n  const endArr = Array.from(Array(7 - monthEndDay)).map(el => '');\n  const daysArr = ['MO', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU'];\n  const middleArr = Array.from(Array(monthLength).keys()).map(date => date + 1);\n  const datesArr = [...startArr, ...middleArr, ...endArr];\n  console.log(datesArr)\n\n  const decrease = () => {\n    if (month === 1) {\n      dispatch(setYear(year - 1));\n      dispatch(setMonth(12));\n    } else {\n      dispatch(setMonth(month - 1));\n    }\n  };\n\n  const increase = () => {\n    if (month === 12) {\n      dispatch(setYear(year + 1));\n      dispatch(setMonth(1));\n    } else {\n      dispatch(setMonth(month + 1));\n    }\n  };\n\n  return (\n    <div className=\"month-container\">\n      <section className=\"nav\">\n        <Button\n          variant=\"outlined\"\n          type=\"button\"\n          onClick={decrease}\n        >\n          ←\n        </Button>\n\n        <h2 className=\"nav__title\">\n          {monthesAccord[month]} {year}\n        </h2>\n\n        <Button\n          variant=\"outlined\"\n          type=\"button\"\n          onClick={increase}\n        >\n          →\n        </Button>\n      </section>\n\n      <table className=\"table\">\n        <thead>\n          <tr>\n            {daysArr.map(day => (\n              <th key={day} className=\"table__th\">{day}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {datesArr.slice(0, 7).map(date => (\n              <MonthDay\n                date={date}\n              />\n            ))}\n          </tr>\n          <tr>\n            {datesArr.slice(7, 14).map(date => (\n              <MonthDay\n                date={date}\n              />\n            ))}\n          </tr>\n          <tr>\n            {datesArr.slice(14, 21).map(date => (\n              <MonthDay\n                date={date}\n              />\n            ))}\n          </tr>\n          <tr>\n            {datesArr.slice(21, 28).map(date => (\n              <MonthDay\n                date={date}\n              />\n            ))}\n          </tr>\n          <tr>\n            {datesArr.slice(28, 35).map(date => (\n              <MonthDay\n                date={date}\n              />\n            ))}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Month;\n","import React from 'react';\nimport './week.scss';\n\nconst hours = [...Array(24).keys()];\nconst preparedHours = hours.map(hour => [`${hour}:00`, ...Array(7)]);\nconst dates = [13, 14, 15, 16, 17, 18, 19]//this must be in props?\nconst weekDays = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n\nconst Week = () => (\n  <div className=\"week-wrapper\">\n    <h1>January 2020</h1>\n    <table className=\"week-table\">\n      <thead>\n      <tr>\n        <th></th>\n        {dates.map((date, i) => (\n          <th key={date}>{weekDays[i]} {date}</th>\n        ))}\n      </tr>\n      </thead>\n      <tbody>\n      {preparedHours.map(row => (\n          <tr\n              className=\"week-table__row\"\n          >\n            {row.map(cell => (\n                <td\n                    className=\"week-table__cell\"\n                >{cell}\n                </td>\n            ))}\n          </tr>\n      ))}\n      </tbody>\n    </table>\n  </div>\n);\n\nexport default Week;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport ClassNames from 'classnames';\n\nimport { getTodos, toggleImportance, addTodo, deleteTodo } from '../../store';\n\nconst Input = ({ hour }) => {\n  const [input, setInput] = useState('');\n  const location = useLocation();\n  const todos = useSelector(getTodos);\n  const dispatch = useDispatch();\n\n  const isThereEvent = todos.find(todo => todo \n    && todo.date === location.pathname.slice(1)\n    && todo.hour === hour);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (input) {\n      dispatch(addTodo({\n        date: location.pathname.slice(1),\n        hour,\n        body: input.trim(),\n        isImportant: false,\n      }));\n    }\n  };\n\n  const editEvent = (event) => {\n    if (event.target.value) {\n      dispatch(deleteTodo(location.pathname.slice(1), event.target.value, hour));\n    }\n    setInput('');\n  };  \n\n  const inputClass = ClassNames(\n    { day__input: true },\n    { 'day__input--event': isThereEvent }\n  );\n\n  return (\n    <form className=\"day__form\" onSubmit={handleSubmit}>\n      <input\n        className={inputClass}\n        type=\"text\"\n        value={(isThereEvent && isThereEvent.body) || input}\n        onChange={event => setInput(event.target.value)}\n        onDoubleClick={editEvent}\n      />\n      {isThereEvent && (\n        <label className=\"day__checkbox\">\n          {isThereEvent.isImportant\n            ? 'Important'\n            : 'Is it important?'}\n          <input \n            type=\"checkbox\" \n            checked={isThereEvent.isImportant}\n            onChange={() => {\n              dispatch(toggleImportance(\n                location.pathname.slice(1),\n                hour\n              ));\n            }}\n          />\n        </label>\n      )}\n    </form>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport './day.scss';\nimport monthesAccord from '../monthesAccord';\nimport Input  from '../Input';\n\nconst hours = [...Array(24).keys()];\n\nconst Day = () => {\n  const location = useLocation();\n  const date = location.pathname.slice(1).split('-');\n\n  return (\n    <div className=\"day\">\n      <h2 className=\"day__date\">\n        {date[0]} {monthesAccord[date[1]]} {date[2]}\n      </h2>\n      <div className=\"day__content\">\n        {hours.map(hour => (\n          <div\n              className=\"day__hour\"\n              key={hour}\n          >\n            <span className=\"day__hour-text\">{`${hour}:00`}</span>\n            <Input hour={hour} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Day;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Tabs from './components/Tabs';\nimport Month from './components/Month';\nimport Week from './components/Week';\nimport Day from './components/Day';\n\nconst App = () => {\n\n  return (\n    <main>\n      <Tabs />\n      <Switch>\n        <Route path=\"/\" exact component={Month} />} />\n        <Route path=\"/month\" component={Month} />} />\n        <Route path=\"/week\" component={Week} />\n        <Route path=\"/:date?\" component={Day} />} />\n      </Switch>\n    </main>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}